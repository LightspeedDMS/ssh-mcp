# Regression Tests CI/CD Configuration
# 
# Comprehensive regression test suite for push-based workflow
# Executes all regression prevention tests on every push to master

name: 🛡️ Regression Tests

on:
  # Execute on every push to main/master branch
  push:
    branches: [ main, master ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'package.json'
      - 'package-lock.json'

  # Manual workflow dispatch for testing
  workflow_dispatch:

jobs:
  regression-tests:
    name: 🔍 Regression Tests
    runs-on: ubuntu-latest
    timeout-minutes: 25
    if: !contains(github.event.head_commit.message, '[skip-tests]')

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build project
        run: npm run build

      - name: 🔑 Setup SSH for localhost testing
        run: |
          # Generate SSH key for localhost testing
          ssh-keygen -t ed25519 -f ~/.ssh/id_ed25519 -N ""
          cat ~/.ssh/id_ed25519.pub >> ~/.ssh/authorized_keys
          chmod 600 ~/.ssh/authorized_keys
          chmod 700 ~/.ssh
          
          # Start SSH service
          sudo service ssh start
          
          # Test SSH connectivity
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null localhost echo "SSH connectivity verified"

      - name: 🛡️ Run comprehensive regression tests
        run: |
          # Run all regression prevention tests
          npm test -- --testPathPattern="regression-prevention" --maxWorkers=4 --verbose --testTimeout=60000
        env:
          CI: true

      - name: 📈 Run performance regression check
        run: |
          # Run performance-specific regression tests
          npm test -- --testNamePattern="Performance" --testPathPattern="regression-prevention" --testTimeout=30000
        continue-on-error: true

      - name: 🚨 Report regression failures
        if: failure()
        run: |
          echo "🚨 REGRESSION TESTS FAILED"
          echo "This indicates potential regression in terminal functionality"
          echo "Review test logs for specific failure details"
          echo "Fix regressions before pushing additional changes"